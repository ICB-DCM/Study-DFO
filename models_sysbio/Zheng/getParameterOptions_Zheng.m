function [parameters,options] = getParameterOptions_Zheng(approach,noc)

options.MS = PestoOptions();
options.MS.localOptimizer = 'fmincon';
options.MS.localOptimizerOptions = optimset('algorithm','interior-point',...
    'display','iter',...
    'GradObj','on',...
    'MaxIter',5000,...
    'TolFun',1e-10,...
    'TolX',1e-10,...
    'MaxFunEvals',40000,...
    'PrecondBandWidth', inf);
options.MS.comp_type = 'sequential';
options.MS.mode = 'visual';
options.MS.save = true;
options.MS.n_starts = 500;

load parameter_guesses_Zheng par0

switch approach
    case 'hierarchical'
        parameters.name = {'inflow','k00_01','k00_10','k01_0','k01_02','k01_11','k02_01',...
            'k02_03','k02_12','k03_02','k03_13','k10_00','k10_11','k10_20','k11_01','k11_10',...
            'k11_12','k11_21','k12_02','k12_11','k12_13','k12_22','k13_03','k13_12',...
            'k13_23','k20_10','k20_21','k20_30','k21_11','k21_20','k21_22','k21_31',...
            'k22_12','k22_21','k22_23','k22_32','k23_13','k23_22','k30_20','k30_31',...
            'k31_21','k31_30','k31_32','k32_22','k32_31'};
        parameters.guess = par0(1:45,:);
        if noc
            for i = 1:4
                options.llh.obs(i).scaling = 'absolute';
                options.llh.obs(i).noise = 'single';
            end
            options.llh.obs_groups.noise = {[1,2,3,4]};
            options.llh.obs_groups.scaling = {1,2,3,4};
        else
            for i = 1:4
                options.llh.obs(i).scaling = 'single';
                options.llh.obs(i).noise = 'single';
            end
            options.llh.obs_groups.noise = {[1,2,3,4]};
            options.llh.obs_groups.scaling = {1,2,3,4};
        end
    case 'standard'
        if noc
            parameters.name = {'inflow','k00_01','k00_10','k01_0','k01_02','k01_11','k02_01',...
                'k02_03','k02_12','k03_02','k03_13','k10_00','k10_11','k10_20','k11_01','k11_10',...
                'k11_12','k11_21','k12_02','k12_11','k12_13','k12_22','k13_03','k13_12',...
                'k13_23','k20_10','k20_21','k20_30','k21_11','k21_20','k21_22','k21_31',...
                'k22_12','k22_21','k22_23','k22_32','k23_13','k23_22','k30_20','k30_31',...
                'k31_21','k31_30','k31_32','k32_22','k32_31','\sigma^2'};
            parameters.guess = par0([1:45,end],:);
            
        else
            parameters.name = {'inflow','k00_01','k00_10','k01_0','k01_02','k01_11','k02_01',...
                'k02_03','k02_12','k03_02','k03_13','k10_00','k10_11','k10_20','k11_01','k11_10',...
                'k11_12','k11_21','k12_02','k12_11','k12_13','k12_22','k13_03','k13_12',...
                'k13_23','k20_10','k20_21','k20_30','k21_11','k21_20','k21_22','k21_31',...
                'k22_12','k22_21','k22_23','k22_32','k23_13','k23_22','k30_20','k30_31',...
                'k31_21','k31_30','k31_32','k32_22','k32_31','c_{t_1}','c_{t_2}','c_{t_3}','c_{t_4}',...
                '\sigma^2'};
            parameters.guess = par0;
        end
        
end

parameters.number = length(parameters.name);
parameters.min = -8*ones(parameters.number,1);
parameters.max = 3*ones(parameters.number,1);
